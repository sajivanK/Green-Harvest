

import { useEffect, useState } from "react";
import axiosApi from "../config/axiosConfig";
import { toast } from "react-toastify";
import { jsPDF } from "jspdf";
import autoTable from "jspdf-autotable";
import logo from "../assets/logo.png";
import { motion } from "framer-motion";

const CustomerOrdersTable = () => {
  const [orders, setOrders] = useState([]);
  const [user, setUser] = useState({ name: "", email: "" });

  useEffect(() => {
    const fetchData = async () => {
      try {
        const [userRes, ordersRes] = await Promise.all([
          axiosApi.get("/api/user/profile", { withCredentials: true }),
          axiosApi.get("/api/orders/customer-orders", { withCredentials: true }),
        ]);

        if (userRes.data.success) {
          setUser(userRes.data.user);
        }

        if (ordersRes.data.success) {
          setOrders(ordersRes.data.orders);
        } else {
          toast.error("Failed to load orders.");
        }
      } catch (err) {
        toast.error("Error fetching data.");
        console.error(err);
      }
    };

    fetchData();
  }, []);

  const generatePDF = () => {
    const doc = new jsPDF();
    const date = new Date().toLocaleDateString();

    const img = new Image();
    img.src = logo;

    img.onload = () => {
      doc.addImage(img, "PNG", 10, 10, 60, 60); // ✅ Larger logo

      addContent();
    };

    img.onerror = () => {
      addContent();
    };

    function addContent() {
      doc.setFontSize(18);
      doc.text("GreenHarvest - Order Report", 75, 30); // shifted right

      doc.setFontSize(11);
      doc.text(`Customer: ${user.name}`, 75, 38);
      doc.text(`Email: ${user.email}`, 75, 43);
      doc.text(`Generated on: ${date}`, 75, 48);

      const tableBody = orders.map((o) => [
        o.productId?.name || "N/A",
        o.quantity,
        `LKR ${o.totalAmount?.toLocaleString() || "0.00"}`,
        o.status,
        new Date(o.createdAt).toLocaleDateString(),
      ]);

      const grandTotal = orders.reduce((acc, curr) => acc + (curr.totalAmount || 0), 0);

      // ✅ Append Total Row
      tableBody.push([
        { content: "Grand Total", colSpan: 2, styles: { fontStyle: "bold", halign: "right" } },
        { content: `LKR ${grandTotal.toLocaleString()}`, styles: { fontStyle: "bold" } },
        "", ""
      ]);

      autoTable(doc, {
        startY: 60,
        head: [["Product", "Qty", "Total (LKR)", "Status", "Date"]],
        body: tableBody,
        headStyles: { fillColor: [22, 101, 52] },
        styles: { fontSize: 10 },
      });

      doc.setFontSize(10);
      doc.text("Generated by GreenHarvest • Cleaner Earth, Greener Future", 15, doc.internal.pageSize.height - 10);

      doc.save("Customer_Orders_Report.pdf");
    }
  };

  return (
    <motion.div
      className="bg-gray-700 bg-opacity-50 backdrop-blur-md shadow-lg rounded-xl p-6 border border-gray-700 mb-8 ml-6 mt-6"
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ delay: 0.2 }}
    >
      <div className=" flex justify-between items-center mb-6">
        <h2 className="text-xl font-semibold text-white">My Orders</h2>
        <button
          onClick={generatePDF}
          className="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-md"
        >
          Download PDF
        </button>
      </div>

      <div className="overflow-x-auto">
        <table className="w-full text-sm text-left text-gray-300">
          <thead className="bg-green-700 text-white">
            <tr>
              <th className="px-4 py-2">Product</th>
              <th className="px-4 py-2">Qty</th>
              <th className="px-4 py-2">Total (LKR)</th>
              <th className="px-4 py-2">Status</th>
              <th className="px-4 py-2">Date</th>
            </tr>
          </thead>
          <tbody>
            {orders.length === 0 ? (
              <tr>
                <td colSpan="5" className="text-center py-4">
                  No orders found.
                </td>
              </tr>
            ) : (
              orders.map((o) => (
                <tr key={o._id} className="border-b border-gray-600 hover:bg-gray-700 transition">
                  <td className="px-4 py-2">{o.productId?.name || "N/A"}</td>
                  <td className="px-4 py-2">{o.quantity}</td>
                  <td className="px-4 py-2">
                    LKR {o.totalAmount?.toLocaleString() || "0.00"}
                  </td>
                  <td className="px-4 py-2">{o.status}</td>
                  <td className="px-4 py-2">
                    {new Date(o.createdAt).toLocaleDateString()}
                  </td>
                </tr>
              ))
            )}
          </tbody>
        </table>
      </div>
    </motion.div>
  );
};

export default CustomerOrdersTable;
